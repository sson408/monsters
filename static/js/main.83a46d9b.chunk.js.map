{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","prop","className","alt","src","monsters","id","name","email","CardList","props","map","monster","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","m","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,EAAO,SAAAC,GAAI,OACpB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAKI,SAASC,GAAxC,4BACvB,6BAAKL,EAAKI,SAASE,OACnB,4BAAIN,EAAKI,SAASG,YCHbC,EAAW,SAAAC,GAAK,OACxB,qBAAKR,UAAU,YAAf,SACIQ,EAAML,SAASM,KAAI,SAAAC,GAAO,OACvB,cAAC,EAAD,CAAwBP,SAAYO,GAAxBA,EAAQN,UCJnBO,G,MAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACtB,uBACIb,UAAU,SACVc,KAAK,SACLF,YAAcA,EACdG,SAAWF,MCiCJG,E,kDApCb,aAAe,IAAD,8BACZ,gBAQAH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAPvC,EAAKC,MAAQ,CACXnB,SAAS,GACTgB,YAAa,IALH,E,qDAad,WAAsB,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACf,SAAWwB,S,oBAG/C,WAAU,IAAD,EACyBC,KAAKN,MAA9BnB,EADA,EACAA,SAAUgB,EADV,EACUA,YACXU,EAAmB1B,EAAS2B,QAAO,SAAAC,GAAC,OACxCA,EAAE1B,KAAK2B,cAAcC,SAASd,EAAYa,kBAE5C,OACE,sBAAKhC,UAAU,MAAf,UACA,cAAC,EAAD,CACEY,YAAY,iBACZC,aAAee,KAAKf,eAEpB,cAAC,EAAD,CAAUV,SAAY0B,W,GA/BZK,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.83a46d9b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = prop => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monsters\" src={`https://robohash.org/${prop.monsters.id}?set=set2&size=180x180`}></img>\r\n        <h2>{prop.monsters.name}</h2>\r\n        <p>{prop.monsters.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css'\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = props => (\r\n     <div className='card-list' >\r\n        {props.monsters.map(monster => (\r\n            <Card key= {monster.id} monsters = {monster}></Card>   \r\n        ))}\r\n      \r\n    </div>\r\n);\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox =  ({placeholder, handleChange}) => (\r\n    <input\r\n        className='search' \r\n        type='search'\r\n        placeholder= {placeholder}\r\n        onChange= {handleChange}\r\n    />\r\n)","import React, { Component } from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters:[],\n      searchField: ''\n    };\n  }\n\n    handleChange = (e) => {\n      this.setState({searchField: e.target.value})\n    }\n\n  componentDidMount () {\n      fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({monsters : users}));\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(m => \n      m.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className='App'>\n      <SearchBox \n        placeholder='search monster'\n        handleChange= {this.handleChange} \n      />\n        <CardList monsters = {filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}